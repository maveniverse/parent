name: CI

on:
  workflow_call:
    inputs:
      maven-build:
        description: The maven invocation for build step
        required: false
        default: './mvnw clean install -e -B -V'
        type: string

      maven-test:
        description: The maven invocation for test matrix step
        required: false
        default: './mvnw install -e -B -V -P run-its'
        type: string

      os-matrix:
        description: os matrix as json array
        required: false
        default: '[ "ubuntu-latest", "windows-latest", "macOS-latest" ]'
        type: string

      jdk-matrix:
        description: jdk matrix as json array
        required: false
        default: '[ "11", "17", "21", "8" ]'
        type: string

      jdk-distribution-matrix:
        description: jdk distribution matrix
        required: false
        default: '[ "temurin" ]'
        type: string

      maven-matrix:
        description: The Maven version matrix as json array
        required: false
        default: '[ "3.9.6", "4.0.0-alpha-12" ]'
        type: string

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
      - run: ${{ inputs.maven-build }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: ${{ fromJSON( inputs.os-matrix ) }}
        jdk: ${{ fromJSON( inputs.jdk-matrix ) }}
        distribution: ${{ fromJSON( inputs.jdk-distribution-matrix ) }}
        maven: ${{ fromJSON( inputs.maven-matrix ) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.sha }}
      - run: ./mvnw -Dmaven=${{ matrix.maven }} -Dtype=only-script wrapper:wrapper
      - run: ${{ inputs.maven-test }}
    
